using System.Collections;
using System.Collections.Generic;
using UnityEngine;


public class PlayerMonsterStatus : MonoBehaviour
{
    [SerializeField, Tooltip("Statusなどを取得する際に使用する共通番号")]
    int _charaId = 0;

    //純粋なステータス

    /// <summary>レベル</summary>
    public int LV;
    /// <summary>名前</summary>
    public string NAME;
    /// <summary>属性</summary>
    public int ATTRIBUTE;
    /// <summary>コンスティチューション,体力</summary>
    public int CON;
    /// <summary>マジックパワー,魔力</summary>
    public int MAG;
    /// <summary>物理的な力</summary>
    public int STR;
    /// <summary>Vitality,物理的な頑強さ、状態異常への抵抗力</summary>
    public int VIT;
    /// <summary>Resist,魔法に対しての抵抗力</summary>
    public int RES;
    /// <summary>Intelligence,知力</summary>
    public int INT;
    /// <summary>Evasion,回避率</summary>
    public int EVA;
    /// <summary>Luck , 運</summary>
    public int LUK;

    void LevelSet(int level)
    {
        LV = level;
        StatusSet();
    }

    //------------計算後のステータスなど---------------

    /// <summary>ヒットポイント</summary>
    public int HP;
    /// <summary>マジックポイント</summary>
    public int MP;
    /// <summary>物理的な攻撃力へ</summary>
    public int ATK;
    /// <summary>物理的な頑強へ</summary>
    public int DEF;
    /// <summary>魔法に対しての抵抗力</summary>
    public int MDEF;
    /// <summary>知力</summary>
    public int MAT;
    /// <summary>回避率</summary>
    public int AVD;
    /// <summary>Critical,クリティカルの発生率</summary>
    public int CRI;
    /// <summary>持っている経験値の総量</summary>
    public int EXP;
    /// <summary>次のレベルへの経験値の総量</summary>
    public int NEXT_EXP;

    /// <summary>与えられた作戦</summary>
    internal TacticsList _tactics = default;

    /// <summary>与えられた作戦</summary>
    internal List<SKILL> _skillList = new List<SKILL>();

    // Start is called before the first frame update
    void Start()
    {
        NAME = SetStatus.Instance.GetName(_charaId);
        ATTRIBUTE = SetStatus.Instance.GetAttribute(_charaId);
        SkillSet();
        LevelSet(1);
    }

    private void SkillSet() 
    {
        _skillList = MonsterSkill.instance.SkillSet(_charaId, LV);
        foreach(SKILL skill in _skillList) 
        {
            Debug.Log($"id {skill.skill_id} name {skill.skill_name} info {skill.skill_info} attribute {skill.skill_attribute}");
        }
    }

    public void TacticsSet(TacticsList tactics) 
    {
        _tactics = tactics;
    }

    void StatusSet()
    {
        int[] setStatus = SetStatus.instance.GetStatus(_charaId , LV);
        CON = setStatus[0];
        MAG = setStatus[1];
        STR = setStatus[2];
        VIT = setStatus[3];
        RES = setStatus[4];
        INT = setStatus[5];
        EVA = setStatus[6];
        CRI = setStatus[7];
    }
}
